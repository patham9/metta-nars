;; NAL-4
;;!Transformation rules between product and image:
;(= (|- ((($A * $B) --> $R) $T)) (($A --> ($R /1 $B)) (Truth_StructuralIntersection $T)))
;(= (|- ((($A * $B) --> $R) $T)) (($B --> ($R /2 $A)) (Truth_StructuralIntersection $T)))
;(= (|- (($R --> ($A * $B)) $T)) ((($R \1 $B) --> $A) (Truth_StructuralIntersection $T)))
;(= (|- (($R --> ($A * $B)) $T)) ((($R \2 $A) --> $B) (Truth_StructuralIntersection $T)))
;;other direction of same rules (as these are bi-directional)
;;(= (|- (($A --> ($R /1 $B)) $T)) ((($A * $B) --> $R) (Truth_StructuralIntersection $T)))
;;(= (|- (($B --> ($R /2 $A)) $T)) ((($A * $B) --> $R) (Truth_StructuralIntersection $T)))
;;(= (|- ((($R \1 $B) --> $A) $T)) (($R --> ($A * $B)) (Truth_StructuralIntersection $T)))
;;(= (|- ((($R \2 $A) --> $B) $T)) (($R --> ($A * $B)) (Truth_StructuralIntersection $T)))
;;!Comparative relations
;;(= (|- ((({ $R }) |-> ([ $P ])) $T1) ((({ $S }) |-> ([ $P ])) $T2)) (((({ $R }) * ({ $S })) --> (>>> $P )) (Truth_FrequencyGreater $T1 $T2)))
;;(= (|- ((($A * $B) --> (>>> $P)) $T1) ((($B * $C) --> (>>> $P)) $T2)) ((($A * $C) --> (>>> $P)) (Truth_Deduction $T1 $T2)))
;;(= (|- ((({ $R }) |-> ([ $P ])) $T1) ((({ $S }) |-> ([ $P ])) $T2)) (((({ $R }) * ({ $S })) --> (=== $P)) (Truth_FrequencyEqual $T1 $T2)))
;;(= (|- ((($A * $B) --> (=== $P)) $T1) ((($B * $C) --> (=== $P)) $T2)) ((($A * $C) --> (=== $P)) (Truth_Deduction $T1 $T2)))
;;(= (|- ((($A * $B) --> (=== $P)) $T)) ((($B * $A) --> (=== $P)) (Truth_StructuralIntersection $T)))
;;!Optional rules for more efficient reasoning about relation components:
(= (|- ((($A 'x $B) '--> $R) $T1) ((($C 'x $B) '--> $R) $T2)) (($C '--> $A) (Truth_Abduction $T1 $T2)))
(= (|- ((($A 'x $B) '--> $R) $T1) ((($A 'x $C) '--> $R) $T2)) (($C '--> $B) (Truth_Abduction $T1 $T2)))
(= (|- (($R '--> ($A 'x $B)) $T1) (($R '--> ($C 'x $B)) $T2)) (($C '--> $A) (Truth_Induction $T1 $T2)))
(= (|- (($R '--> ($A 'x $B)) $T1) (($R '--> ($A 'x $C)) $T2)) (($C '--> $B) (Truth_Induction $T1 $T2)))
(= (|- ((($A 'x $B) '--> $R) $T1) (($C '--> $A) $T2)) ((($C 'x $B) '--> $R) (Truth_Deduction $T1 $T2)))
(= (|- ((($A 'x $B) '--> $R) $T1) (($A '--> $C) $T2)) ((($C 'x $B) '--> $R) (Truth_Induction $T1 $T2)))
;(= (|- ((($A * $B) --> $R) $T1) (($C <-> $A) $T2)) ((($C * $B) --> $R) (Truth_Analogy $T1 $T2)))
(= (|- ((($A 'x $B) '--> $R) $T1) (($C '--> $B) $T2)) ((($A 'x $C) '--> $R) (Truth_Deduction $T1 $T2)))
(= (|- ((($A 'x $B) '--> $R) $T1) (($B '--> $C) $T2)) ((($A 'x $C) '--> $R) (Truth_Induction $T1 $T2)))
;(= (|- ((($A * $B) --> $R) $T1) (($C <-> $B) $T2)) ((($A * $C) --> $R) (Truth_Analogy $T1 $T2)))
(= (|- (($R '--> ($A 'x $B)) $T1) (($A '--> $C) $T2)) (($R '--> ($C 'x $B)) (Truth_Deduction $T1 $T2)))
(= (|- (($R '--> ($A 'x $B)) $T1) (($C '--> $A) $T2)) (($R '--> ($C 'x $B)) (Truth_Abduction $T1 $T2)))
;(= (|- (($R --> ($A * $B)) $T1) (($C <-> $A) $T2)) (($R --> ($C * $B)) (Truth_Analogy $T1 $T2)))
(= (|- (($R '--> ($A 'x $B)) $T1) (($B '--> $C) $T2)) (($R '--> ($A 'x $C)) (Truth_Deduction $T1 $T2)))
(= (|- (($R '--> ($A 'x $B)) $T1) (($C '--> $B) $T2)) (($R '--> ($A 'x $C)) (Truth_Abduction $T1 $T2)))
;(= (|- (($R --> ($A * $B)) $T1) (($C <-> $B) $T2)) (($R --> ($A * $C)) (Truth_Analogy $T1 $T2)))
;(= (|- ((($A * $B) --> $R) $T1) ((($C * $B) --> $R) $T2)) (($A <-> $C) (Truth_Comparison $T1 $T2)))
;(= (|- ((($A * $B) --> $R) $T1) ((($A * $C) --> $R) $T2)) (($B <-> $C) (Truth_Comparison $T1 $T2)))
;(= (|- (($R --> ($A * $B)) $T1) (($R --> ($C * $B)) $T2)) (($A <-> $C) (Truth_Comparison $T1 $T2)))
;(= (|- (($R --> ($A * $B)) $T1) (($R --> ($A * $C)) $T2)) (($B <-> $C) (Truth_Comparison $T1 $T2)))
